https://www.khronos.org/opengl/wiki/Interface_Block_(GLSL)

use glBindBufferRange to bind with data offset


layout(std430, binding = 2) buffer MyBuffer
{
  mat4 matrix;
  float lotsOfFloats[];
};






The number of float variables in lotsOfFloats depends on the size of the buffer range that is attached to the binding point. matrix will be 64 bytes in size, so the number of elements in lotsOfFloats will be (size of the bound range minus 64) / 4. Thus, if we bind with this:

glBindBufferRange(GL_SHADER_STORAGE_BUFFER, 2, buffer, 0, 128);

There will be (128 - 64) / 4, or 16 elements in lotsOfFloats. Thus, lotsOfFloats.length() will return 16. It will return a different value depending on the size of the bound range.